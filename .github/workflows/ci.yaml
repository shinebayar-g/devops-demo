name: Continuous Development

on:
  push:
    branches:
      - '**'
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '!deploy/**'
  pull_request:
    branches:
      - $default-branch

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # - name: Debug
    #   run: |
    #     echo ${GITHUB_RUN_ID}
    #     echo ${GITHUB_RUN_NUMBER}
    #     echo ${GITHUB_ACTION}
    #     echo ${GITHUB_ACTOR}
    #     echo ${GITHUB_REPOSITORY}
    #     echo ${GITHUB_EVENT_NAME}
    #     echo ${GITHUB_WORKSPACE}
    #     echo ${GITHUB_SHA}
    #     echo ${GITHUB_REF}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        cd src
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # - name: Test with pytest
    #   run: |
    #     pytest

    - name: Build docker image
      if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t shinebayar/devops-demo-flask:${GITHUB_REF#refs/heads/} -f Dockerfile .
        docker push shinebayar/devops-demo-flask:${GITHUB_REF#refs/heads/}
